(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{416:function(a,t,r){"use strict";r.r(t);var e=r(30),p=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"實作python畫圖與資料處理-分析價格並解決數學建模問題"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#實作python畫圖與資料處理-分析價格並解決數學建模問題"}},[a._v("#")]),a._v(" 實作Python畫圖與資料處理-分析價格並解決數學建模問題")]),a._v(" "),r("p",[a._v("實際學習Python已經是七八年前了，近來為了研究程式交易策略，回頭再來摸索一下常用的Python套件，直接畫圖顯得有點無聊，所以結合一個小到不行的問題來處理。以下會用到pandas, numpy和matplotlib。")]),a._v(" "),r("p",[a._v("數學建模是一種「利用數學來表示、分析、做出預測或以其他方式提供真實世界現象的視野」的過程（GAIMME 2019）。事實上每個人無時無刻都會有經歷數學建模的時機，包含定義單位、描述關係及解決問題等不同面向。")]),a._v(" "),r("p",[a._v("介紹完建模就有點太遠了，我們還是快速進入我們的問題吧！")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/0*OycJV0nD3Ih4skeY.jpg",alt:""}})]),a._v(" "),r("p",[a._v("大家都應該有留意到，便當中的菜色總會隨著時間變化，但實際上它的變化方式是怎麼樣呢？由於我個人很喜歡吃高麗菜，所以選擇以高麗菜做為研究的目標。")]),a._v(" "),r("p",[a._v("體感上，在夏季的時候比較難在便當中看到高麗菜，過了秋季之後就慢慢出現。大概可以想像是夏季價格比較高，導致便當業者不願意購買，改用其他替代的葉菜。至於價格比較高的緣由，從過去所學的常識告訴我應該是產量較少，簡單的搜尋了一下，也確實得到高麗菜產季約為秋冬季。")]),a._v(" "),r("p",[a._v("我們可以觀察當季好蔬果網站中關於甘藍-初秋的批發市場行情趨勢圖："),r("a",{attrs:{href:"https://www.twfood.cc/vege/LA1/%E7%94%98%E8%97%8D-%E5%88%9D%E7%A7%8B%28%E9%AB%98%E9%BA%97%E8%8F%9C,%E6%8D%B2%E5%BF%83%E8%8F%9C%29",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.twfood.cc/vege/LA1/甘藍-初秋(高麗菜,捲心菜)"),r("OutboundLink")],1)]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*2289oaM8Rqy81HyN0a_efQ.png",alt:""}})]),a._v(" "),r("blockquote",[r("p",[a._v("初步觀察，可以認定說成交量和成交價間成反向關係："),r("br"),a._v("\n當成交量上升時，成交價下降；"),r("br"),a._v("\n當成交量下降時，成交價上升。")])]),a._v(" "),r("blockquote",[r("p",[a._v("也確實在大概夏季的時候成交量就會大幅下滑。")])]),a._v(" "),r("p",[a._v("至於如何具體描述他們的關係呢？")]),a._v(" "),r("p",[a._v("我們可以利用pandas整理資料：")]),a._v(" "),r("p",[a._v("#先將時間、成交量、成交價從網站上爬下來。再整理成一個dataframe")]),a._v(" "),r("p",[a._v("import pandas as pd"),r("br"),a._v("\nimport numpy as np")]),a._v(" "),r("p",[a._v("#爬下來的檔案被分成三個np.array，利用merge整理在一起")]),a._v(" "),r("p",[a._v("data = pd.Dataframe()"),r("br"),a._v("\ndata = pd.merge(time,volume,left_index=True,right_index=True)"),r("br"),a._v("\ndata = pd.merge(data,value,left_index=True,right_index=True)")]),a._v(" "),r("p",[a._v("#原始格式是timestamp，利用astype改成datatime"),r("br"),a._v('\ntime = time.astype("datetime64[ns]")')]),a._v(" "),r("p",[a._v("#將index修正為時間，方便作圖。"),r("br"),a._v('\ndata.index = time["DATE"]')]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*kSX_v2mfQR3u_k5e9aGN1w.png",alt:""}})]),a._v(" "),r("p",[a._v("整理完後就是利用matplotlib進行視覺化，但事實上pandas的dataframe已經將plot方法給寫進去了，所以作圖比想像中的容易許多。")]),a._v(" "),r("p",[a._v("#因為成交量和成交價量級差太多，所以利用secondary_y=True多畫出成交量的y軸。"),r("br"),a._v('\ndata["VALUE"].plot()'),r("br"),a._v('\ndata["VOLUME"].plot(secondary_y=True)')]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*aamyjnoEqmVn-WoLFZ2Cyw.png",alt:""}})]),a._v(" "),r("p",[a._v("作出和網站上差不多的圖，接下來我們取x軸為成交量、y軸為成交價，直接畫出散布圖，看兩者間的關係是否和我們想像的一樣。")]),a._v(" "),r("p",[a._v('data.plot(kind="scatter",x="VOLUME",y="VALUE")')]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*q6sgVcmB3Jqcj4XoTXOYsg.png",alt:""}})]),a._v(" "),r("p",[a._v("看起來是蠻漂亮的直線關係，利用numpy的polyfit畫出小時候學過的迴歸直線。順便用另外一種方式畫圖將直線拼上散布圖。")]),a._v(" "),r("p",[a._v("import matplotlib.pyplot as plt")]),a._v(" "),r("p",[a._v("fig, ax = plt.subplots() #作出plt畫布"),r("br"),a._v('\nax.scatter(data["VOLUME"],data["VALUE"],color="red",) #畫散布圖')]),a._v(" "),r("p",[a._v("#polyfit可以找出最接近數據點的迴歸n次多項式，這裡取直線為1次"),r("br"),a._v('\na , b = np.polyfit(data["VOLUME"],data["VALUE"],deg=1)'),r("br"),a._v("\nf = lambda x: a*x + b"),r("br"),a._v('\nx = np.array([min(data["VOLUME"]),max(data["VOLUME"])])'),r("br"),a._v("\nax.plot(x,f(x)) #製作迴歸線"),r("br"),a._v("\nprint(a,b)")]),a._v(" "),r("p",[a._v(">>> a = -0.001723, b = 41.779762")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*6oAac05HhTbyLhziE5bl-g.png",alt:""}})]),a._v(" "),r("p",[a._v("看起來相當漂亮，利用dataframe的corr方法可以簡單的作出兩者的相關係數r=-0.88777，呈現高度負相關。基本上可以用線性方程式來呈現成交量及成交價的關係。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*1tHo_S1xMDtxUvsjzvq4Sw.png",alt:""}})]),a._v(" "),r("blockquote",[r("p",[a._v("成交價 = -0.001723*成交量 + 41.779762")])]),a._v(" "),r("p",[a._v("踉踉蹌蹌的得到小時候的供需法則後，接下來我們可以來看季節與成交量的關係。")]),a._v(" "),r("p",[a._v('data["MONTH"] = data.index.month #作出月份，當作季節的參考。')]),a._v(" "),r("p",[a._v("fig, ax = plt.subplots()"),r("br"),a._v('\nax.scatter(data["MONTH"],data["VOLUME"],color="red")')]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*8x18zrjkRyCZ1TGG0A-PVA.png",alt:""}})]),a._v(" "),r("p",[a._v("肯定不是一次函數了，乍看之下有點向開口向上的二次函數，或是遞增的三次函數。於是我們直接做做看三次函數的迴歸線。")]),a._v(" "),r("p",[a._v('a,b,c,d = np.polyfit(data["MONTH"],data["VOLUME"],deg=3)'),r("br"),a._v("\nf = lambda x: a*(x**3) + b*x**2 + c *x+d"),r("br"),a._v("\nx = np.array(range(1,13))"),r("br"),a._v("\nax.plot(x,f(x)) #製作迴歸線"),r("br"),a._v("\nfig")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*o4-VasuhhoJoI4mTyqMy7g.png",alt:""}})]),a._v(" "),r("p",[a._v("看起來還可以，但季節是個延續不斷的週期系函數，用多項式函數來趨近不太自然。想想過去學過的週期性函數有哪些？啊哈！三角函數。利用scipy的optimize.curve_fit函數，去符合原始資料。")]),a._v(" "),r("p",[a._v("import scipy.optimize as optimize")]),a._v(" "),r("p",[a._v("pi = np.pi"),r("br"),a._v("\nx = np.array(range(len(data)))"),r("br"),a._v('\ny = np.array(data["VOLUME"])'),r("br"),a._v("\n#定義目標函數"),r("br"),a._v("\ndef target_func(x, a0, a1, a2, a3):"),r("br"),a._v("\nreturn a0 * np.sin(a1 * x + a2) + a3")]),a._v(" "),r("p",[a._v("a0 = max(y) - min(y) #振福"),r("br"),a._v("\na1 = 12 #波長"),r("br"),a._v("\na2 = 0 #左右平移"),r("br"),a._v("\na3 = np.mean(y) #上下平移"),r("br"),a._v("\np0 = [a0, a1, a2, a3]"),r("br"),a._v("\npara, _ = optimize.curve_fit(target_func, x, y, p0=p0) #最佳化出函數")]),a._v(" "),r("p",[a._v("y_fit = [target_func(a, *para) for a in x]")]),a._v(" "),r("p",[a._v("fig, ax = plt.subplots()"),r("br"),a._v("\nax.plot(x, y_fit, 'g')"),r("br"),a._v("\nax.plot(x, y, 'r')"),r("br"),a._v('\nplt.xticks(x,np.array(time["DATE"].dt.date))'),r("br"),a._v("\nplt.locator_params(axis='x', nbins=5)")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*tHwVkhg8AicxI56HYthPvw.png",alt:""}})]),a._v(" "),r("p",[a._v("利用正弦函數逼近的相當漂亮呢！於是我們也找出時間與成交量的關係函數。")]),a._v(" "),r("blockquote",[r("p",[a._v("成交量=-5375.48*sin(12.03*時間-0.89)+13087.29"),r("br"),a._v("\n其中時間的初始值為2016年2月，單位為月。"),r("br"),a._v("\n最大最小值分別出現在3月和9月。")])]),a._v(" "),r("p",[a._v("和之前的三次函數做個比較，也不算相差太遠。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://cdn-images-1.medium.com/max/800/1*O6c31M6JXl3c4tS90shu-g.png",alt:""}})]),a._v(" "),r("p",[a._v("找到函數後，最有價值的地方在於預測未來發展，透過這樣的建模活動，我就能更踏實的知道菜價與時間的關係，甚至是明確標出菜價高昂或便宜的時機。藉此可以在菜價高昂時找替代性商品，減少食物花費，或是開發在夏季大收的高麗菜品種，藉此賺得缽滿碗滿。")]),a._v(" "),r("h3",{attrs:{id:"reference"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[a._v("#")]),a._v(" Reference:")]),a._v(" "),r("p",[a._v("Pandas Document DataFrame"),r("a",{attrs:{href:"https://pandas.pydata.org/pandas-docs/stable/reference/frame.html",target:"_blank",rel:"noopener noreferrer"}},[r("br"),a._v("\nhttps://pandas.pydata.org/pandas-docs/stable/reference/frame.html"),r("OutboundLink")],1)]),a._v(" "),r("p",[a._v("當季好蔬果網站 甘藍-初秋的批發市場行情趨勢圖"),r("a",{attrs:{href:"https://www.twfood.cc/vege/LA1/%E7%94%98%E8%97%8D-%E5%88%9D%E7%A7%8B%28%E9%AB%98%E9%BA%97%E8%8F%9C,%E6%8D%B2%E5%BF%83%E8%8F%9C%29",target:"_blank",rel:"noopener noreferrer"}},[r("br"),a._v("\nhttps://www.twfood.cc/vege/LA1/甘藍-初秋(高麗菜,捲心菜)"),r("OutboundLink")],1)]),a._v(" "),r("p",[a._v("python数据分析之曲线拟合（2）：三角函数sin/cos拟合"),r("a",{attrs:{href:"https://blog.csdn.net/kaever/article/details/109659367",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://blog.csdn.net/kaever/article/details/109659367"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=p.exports}}]);